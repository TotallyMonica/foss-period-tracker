Variables:
	_start
		Visibility: Private
		Type: java.util.Date
		Use: Date of when the period started
	_current
		Visibility: Private
		Type: java.util.Calendar
		Use: Date of next cycle
	_next
		Visibility: Private
		Type: java.util.Calendar
		Use: Date of cycle after
		TODO: Move to type Period
	_offset
		Visibility: Private
		Type: int
		Use: Number of days in between cycles
	_length
		Visibility: Private
		Type: int
		Use: Length of the cycle in days
	_regular
		Visibility: Private
		Type: boolean
		Use: Determines if periods are regular
		Default: True
Functions:
	SetOffset:
		Input: integer representation of days between cycles
		Output: <none>
		Use:
			Sets _offset to the length 
	StartNow:
		Input: <none>
		Output: <none>
		Use: Sets _start to the current date
	SetNext:
		Input: <none>, Integer representation of days between cycles
		Output: <none>
		Use: Sets the next period to the date based off of the current date and the offset used in _offset
		TODO: Only set based off of offset if _regular is true
	SetLength:
		Input: Integer representation of days of cycle
		Output: <none>
		Use: Sets the length of an average cycle.
	SetRegularity:
		Input: boolean representation if cycle is regular
		Output: <none>
		Use: Sets _regular to the intput
	SetAlarmRange:
		Input: integer representation of how many days to alert after a cycle
		Output: <none>
		Use: If _start is outside of this range, use this to monitor tendencies.
	NextCycle:
		Input: <none>
		Output: _start
		Use: Returns the date of the next cycle
	IsRegular:
		Input: <none>
		Output: _regular
		Use: Boolean representation of regularity of cycle.
	HasStarted:
		Input: <none>
		Output: Representation of if a cycle has started.
		Use: Determining if a cyle is starting or has started.
	